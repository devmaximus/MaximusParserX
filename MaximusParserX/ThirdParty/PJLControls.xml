<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PJLControls</name>
    </assembly>
    <members>
        <member name="T:PJLControls.CustomColorPanel">
            <summary>
            <B>Not implemented.</B><br></br><br></br>
            I intend to factor out the color panel in the CustomColorPicker into a separate control.
            </summary>
        </member>
        <member name="F:PJLControls.CustomColorPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPanel.#ctor">
            <summary>
            [T.B.D]
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            [T.B.D]
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides OnPaintBackground.  Since the whole of the control is drawn
            in OnPaint, OnPaintBackground is overridden to do nothing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPanel.OnColorChanged(PJLControls.ColorChangedEventArgs)">
            <summary>
            Raises the ColorChanged event_.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPanel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overrides OnEnabledChanged so the control can redraw itself 
            enabled/disabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPanel.UpdateBorderSize">
            <summary>
            Update the border size values based on the current border style.
            </summary>
        </member>
        <member name="E:PJLControls.CustomColorPanel.ColorChanged">
            <summary>
            The ColorChangedEvent event handler.
            </summary>
        </member>
        <member name="P:PJLControls.CustomColorPanel.ZAxis">
            <summary>
            
            </summary>
        </member>
        <member name="P:PJLControls.CustomColorPanel.Color">
            <summary>
            Sets/gets the pick color.
            </summary>
        </member>
        <member name="P:PJLControls.CustomColorPanel.AutoSize">
            <summary>
            Set/get the auto-size property.
            </summary>
            <remarks>
            Setting auto-size to <b>true</b> will fix the size of the control to 
            256 x 256 (plus borders) so that every color will be displayed in one
            pixel.
            </remarks>
        </member>
        <member name="P:PJLControls.CustomColorPanel.Isotropic">
            <summary>
            Sets/gets the isotropic property.
            </summary>
            <remarks>
            If auto-size if <b>false</b> then the control can be scaled, but if
            isotropic is <b>true</b> then the x and y axis will be the same.
            </remarks>
        </member>
        <member name="P:PJLControls.CustomColorPanel.BorderStyle">
            <summary>
            Set/get the controls border style.
            </summary>
        </member>
        <member name="T:PJLControls.Utils">
            <summary>
            Utility class_.
            </summary>
        </member>
        <member name="M:PJLControls.Utils.CheckValidEnumValue(System.String,System.Object,System.Type)">
            <summary>
            Check that the supplied enum value belongs to the supplied System.Type.<br></br>
            If not throw an InvalidEnumArgumentException.
            </summary>
            <param name="argumentName">The name of the argument.</param>
            <param name="enumValue">The enum value.</param>
            <param name="enumClass">The type of the enum that 'enumValue' should belong to.</param>
        </member>
        <member name="T:PJLControls.ColorPanelForm">
            <summary>
            ColorPanelForm is used to host an instance of ColorPanel.
            <br></br>
            This enable the ColorPanel control to be dropped down by the
            ColorPicker.
            <br></br><br></br>
            </summary>
        </member>
        <member name="F:PJLControls.ColorPanelForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanelForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanelForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanelForm.ParentWidth">
            <summary>
            This is so ColorPicker can inform the ColorPanelForm/ColorPanel of the desired
            width of the control.
            </summary>
        </member>
        <member name="T:PJLControls.CustomColorPicker">
            <summary>
            A control that allows the user to select any color from the
            RGB color space.
            </summary>
            <remarks>
            The control presents a 2 dimensional slice through the 3D color cube.  The user
            may select Red, Green or Blue to be the z-axis where the z-axis extends into the screen and the
            x and y-axes are the remaining pair of colors.
            The control displays a 256x256 color palette calculated over the x and y axes combined
            with the selected z-axis value.  This palette is varied continuously as the user changes the 
            selected z-axis value.
            <br></br><br></br>
            The control is based on <a href="http://dotnet.securedomains.com/colorpicker/default.aspx">
            Peter McMahon's ColorPicker.NET</a>.
            I have translated it to C#, improved performance and made it into a reusable control.
            </remarks>
        </member>
        <member name="M:PJLControls.CustomColorPicker.#ctor">
            <summary>
            Creates a CustomColorPicker control.
            It defaults to the blue/green side of the color cube (z-axis=red).
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPicker.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPicker.OnColorChanged(PJLControls.ColorChangedEventArgs)">
            <summary>
            Raises the ColorChanged event_.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPicker.ResetColor">
            <summary>
            Design time support to reset the Color property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.CustomColorPicker.ShouldSerializeColor">
            <summary>
            Design time support to indicate whether the Color property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.CustomColorPicker.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overrides OnEnabledChanged so the control can redraw itself 
            enabled/disabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.CustomColorPicker.OnLoad(System.EventArgs)">
            <summary>
            Overrides OnLoad.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:PJLControls.CustomColorPicker.ColorChanged">
            <summary>
            The ColorChangedEvent event handler.
            </summary>
        </member>
        <member name="P:PJLControls.CustomColorPicker.Color">
            <summary>
            Sets/gets the pick color.
            </summary>
        </member>
        <member name="P:PJLControls.CustomColorPicker.EnableContinuousScrollZ">
            <summary>
            Enable/disable smooth scrolling of the z-axis of the color cube.
            You may want to disable this on slower systems since continuously recomputing
            the color palette is fairly processor intensive.
            </summary>
        </member>
        <member name="T:PJLControls.ColorPanelWithCapture">
            <summary>
            This internal class adds mouse capture to the ColorPanel
            so we can close the containing modal dialog 'ColorPanelForm'
            appropriately.
            </summary>
        </member>
        <member name="T:PJLControls.ColorPanel">
            <summary>
            A control that allows the selection of a color
            from a fixed color palette.
            </summary>
            <remarks>
            The color panel displays a grid of colors.  These colors are either derived from the
            System.Drawing.KnownColor enumeration, or supplied by the user using the <c>CustomColor</c> property.
            <br></br>
            <br></br>
            The set of colors displayed is controlled by the <see cref="T:PJLControls.ColorSet">ColorSet</see> property.
            </remarks>
        </member>
        <member name="M:PJLControls.ColorPanel.#ctor">
            <summary>
            Initializes a new instance of the ColorPanel class_.
            </summary>
            <remarks>
            The default constructor initializes all fields to their default values.
            </remarks>
        </member>
        <member name="M:PJLControls.ColorPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.LayoutColorWells">
            <summary>
            Layout the color wells in the available space.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.FireColorChanged">
            <summary>
            
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.OnColorChanged(PJLControls.ColorChangedEventArgs)">
            <summary>
            Raises the ColorChanged event_.
            </summary>
            <param name="e">A ColorChangedEventArgs contains the event data.</param>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellFromPoint(System.Int32,System.Int32)">
            <summary>
            Get the color well at the specified point.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellFromColor(System.Drawing.Color)">
            <summary>
            Get the first color well with the specified color.
            There may be multiple color wells with the same color for custom color palettes.
            Note that Color.White != Color.Window even when Color.Window is white!
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.IndexFromColorWell(PJLControls.ColorPanel.ColorWellInfo)">
            <summary>
            Get the sorted index of the color well (not the original index).
            </summary>
            <param name="col"></param>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.OnClick(System.EventArgs)">
            <summary>
            Overrides the OnClick event in order to detect user color selection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.ChangeColor(PJLControls.ColorPanel.ColorWellInfo)">
            <summary>
            Change the color currently selected.  Does not cause
            a ColorChanged event_.
            </summary>
            <param name="newColor"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseMove event in order to track mouse movement.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnMouseLeave(System.EventArgs)">
            <summary>
            Overrides OnMouseLeave in order to detect when the mouse
            has left the control.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnGotFocus(System.EventArgs)">
            <summary>
            Overrides OnGotFocus so the control can be redrawn with the focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnLostFocus(System.EventArgs)">
            <summary>
            Overrides OnLostFocus so the control can be redrawn without the focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Overrides IsInputKey.<br></br><br></br>
            This allows the control to tell the base class that the keys
            Keys.Left, Keys.Right, Keys.Up and Keys.Down should cause the OnKeyDown event_.
            </summary>
            <param name="keyData">One of the <c>System.Windows.Forms.Keys</c> values</param>
            <returns><B>true</B> if keyData is one of 
            Keys.Left, Keys.Right, Keys.Up and Keys.Down.  Otherwise <B>false</B>.</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides OnKeyDown so that a color may be selected using the keyboard.<br></br><br></br>
            Use the keys - Left, Right, Up, Down and Enter.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.GetPreferredWidth">
            <summary>
            When the ColorPanel is being resized GetPreferredWidth is called to
            determine the preferred width.
            For ColorPanel the preferred width is the control's default Width, i.e the control may be resized.
            <br></br>
            Derived classes, such as ColorPanelWithCapture may override this.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.AutoSizePanel">
            <summary>
            This method is called internally to set the control's size.<br></br>
            If the Columns property is 0 then the control fixes it's width to the 
            nearest number of columns that fit into the value returned by GetPreferredWidth.<br></br>
            If the Columns property is greater than 0 then the control will display that many columns.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.OnResize(System.EventArgs)">
            <summary>
            Overrides OnResize so the control can be auto-sized.
            </summary>
            <remarks>
            The control auto-sizes.  It first fixes the width to the nearest
            whole multiple of the color well width, and then fixes the height to
            the nearest whole multiple of the color well height.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overrides OnEnabledChanged so the control can redraw itself 
            enabled/disabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides OnPaint so the control can be drawn.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.OnSystemColorsChanged(System.EventArgs)">
            <summary>
            Override OnSystemColorsChanged to that the System color palette
            can be updated when a user modifies the system colors.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.UpdateBorderSize">
            <summary>
            Update the border size values based on the current border style.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.ResetColor">
            <summary>
            Design time support to reset the Color property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.ShouldSerializeColor">
            <summary>
            Design time support to indicate whether the Color property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ResetColorWellSize">
            <summary>
            Design time support to reset the ColorWellSize property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.ShouldSerializeColorWellSize">
            <summary>
            Design time support to indicate whether the ColorWellSize property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ResetCustomColors">
            <summary>
            Design time support to reset the CustomColors property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.DefaultCustomColors">
            <summary>
            Helper for ColorPicker/ColorPanel
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ShouldSerializeCustomColors">
            <summary>
            Design time support to indicate whether the CustomColors property should be serialized.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.ShouldSerializeCustomColors(System.Drawing.Color[])">
            <summary>
            Helper for ColorPicker/ColorPanel
            </summary>
            <returns></returns>
        </member>
        <member name="E:PJLControls.ColorPanel.ColorChanged">
            <summary>
            The ColorChangedEvent event handler.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.BorderStyle">
            <summary>
            Set/get the controls border style.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.Color">
            <summary>
            Set/get the pick Color.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.ColorSet">
            <summary>
            Set/get the set of colors displayed by the control.<br></br><br></br>
            See <see cref="T:PJLControls.ColorSet">ColorSet</see>.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.ColorWellSize">
            <summary>
            Set/get the size of the color wells.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.ColorSortOrder">
            <summary>
            Set/get the order in which colors in the palette should be sorted.<br></br><br></br>
            See <see cref="T:PJLControls.ColorSortOrder">ColorSortOrder</see>.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.Columns">
            <summary>
            Set/get the number of preferred columns.<br></br><br></br>
            If you set this value less than or equal to 0, you may resize the control.<br></br>
            If you set this greater that 0 the control will have a fixed width
            of 'Columns' unless 
            there are fewer colors than 'Columns' in the palette in which case it will display all colors in
            a single row.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPanel.CustomColors">
            <summary>
            Set/get the custom color palette to be displayed.
            </summary>
        </member>
        <member name="T:PJLControls.ColorPanel.ColorWellInfo">
            <summary>
            This class is used to hold the information about each color well.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareColorDistance">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareColorName">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareColorSaturation">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareColorHue">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareColorBrightness">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.CompareUnsorted">
            <summary>
            Returns an new instance of a class used to sort the color table.
            </summary>
            <returns>IComparer</returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.GetCustomColorWells(System.Drawing.Color[],PJLControls.ColorSortOrder)">
            <summary>
            Generate an array of ColorWellInfo from the supplied array of Color.
            </summary>
            <param name="customColors"></param>
            <param name="colorSortOrder"></param>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.GetColorWells(PJLControls.ColorSet,PJLControls.ColorSortOrder)">
            <summary>
            This method return an array of colorWells that belong to the desired ColorSet and 
            that have been sorted in the desired ColorSortOrder.
            </summary>
            <param name="colorSet">The color palette to be generated.</param>
            <param name="colorSortOrder">The order the generated palette should be sorted.</param>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.SortColorWells(PJLControls.ColorPanel.ColorWellInfo[],PJLControls.ColorSortOrder)">
            <summary>
            Sort the supplied colorWells according to the required sort order.
            </summary>
            <param name="colorWells"></param>
            <param name="colorSortOrder"></param>
        </member>
        <member name="M:PJLControls.ColorPanel.ColorWellInfo.DrawColorWell(System.Drawing.Graphics,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws the ColorWell on the Graphics surface.
            </summary>
            <remarks>
            This method draws the ColorWell as either enabled or disabled.
            It also indicates the currently selected color and the color
            that is ready to chosed (picked) by the mouse or keyboard.
            </remarks>
            <param name="g"></param>
            <param name="enabled"></param>
            <param name="selected"></param>
            <param name="pickColor"></param>
        </member>
        <member name="M:PJLControls.ColorPanelWithCapture.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanelWithCapture.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPanelWithCapture.GetPreferredWidth">
            <summary>
            Override the base class preferred width to be that of the 
            our parent ColorPicker control.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPanelWithCapture.OnGotFocus(System.EventArgs)">
            <summary>
            Overrides OnGotFocus in order to grab Mouse Capture.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:PJLControls.ColorPicker">
            <summary>
            A control with a combo-box like UI that allows the user to select a color
            from a fixed color palette.
            </summary>
            <remarks>
            This control simulates a combo-box style UI but drops down a <see cref="T:PJLControls.ColorPanel">ColorPanel</see>
            to allow the user to select a color.
            </remarks>
        </member>
        <member name="F:PJLControls.ColorPicker.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.#ctor">
            <summary>
            Initializes a new instance of the ColorPicker class_.
            </summary>
            <remarks>
            The default constructor initializes all fields to their default values.
            </remarks>
        </member>
        <member name="M:PJLControls.ColorPicker.Dispose(System.Boolean)">
            <summary> 
            Overloaded. Releases the resources used by the Component.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.OnGotFocus(System.EventArgs)">
            <summary>
            Overrides OnGotFocus so the control can be redrawn with the focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnLostFocus(System.EventArgs)">
            <summary>
            Overrides OnLostFocus so the control can be redrawn without the focus.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides OnPaint so the control can be drawn.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Overrides OnPaintBackground.  Since the whole of the control is drawn
            in OnPaint, OnPaintBackground is overridden to do nothing.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.IsInputKey(System.Windows.Forms.Keys)">
            <summary>
            Overrides IsInputKey.<br></br><br></br>
            This allows the control to tell the base class that the keys
            Keys.Down or Keys.Down + Keys.Alt should cause the OnKeyDown event_.
            </summary>
            <param name="keyData">One of the <c>System.Windows.Forms.Keys</c> values</param>
            <returns><B>true</B> if keyData is one of 
            Keys.Down or Keys.Down+Keys.Alt.  Otherwise <B>false</B>.</returns>
        </member>
        <member name="M:PJLControls.ColorPicker.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides OnMouseDown.
            </summary>
            <remarks>
            Checks if the MouseDown event occured on the combo button.  If
            so the control is redrawn in the pushed state.</remarks>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.ShowDropdown">
            <summary>
            Display the ColorPicker's drop down palette.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides OnMouseUp.
            </summary>
            <remarks>
            When the user releases the mouse over the combo button after having pressed it, the 
            contained <see cref="T:PJLControls.ColorPanel">ColorPanel</see> is displayed.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnResize(System.EventArgs)">
            <summary>
            Override OnResize.
            </summary>
            <remarks>
            OnResize is overridden in order to autosize the control.<br></br><br></br>
            
            The control's width may be set freely but if the AutoSize property is set to <b>true</b>
            the control's height is fixed to Font.Height + Border.Height + 4.
            </remarks>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnColorChanged(PJLControls.ColorChangedEventArgs)">
            <summary>
            Raises the ColorChanged event_.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.ResetColor">
            <summary>
            Design time support to reset the Color property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.ShouldSerializeColor">
            <summary>
            Design time support to indicate whether the Color property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPicker.ResetColorWellSize">
            <summary>
            Design time support to reset the ColorWellSize property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.ShouldSerializeColorWellSize">
            <summary>
            Design time support to indicate whether the ColorWellSize property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPicker.OnEnabledChanged(System.EventArgs)">
            <summary>
            Overrides OnEnabledChanged so the control can redraw itself 
            enabled/disabled.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.OnFontChanged(System.EventArgs)">
            <summary>
            Overrides OnFontChanged so the control can resize/redraw itself appropriately.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:PJLControls.ColorPicker.Reset_Text">
            <summary>
            Design time support to reset the _Text property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.ShouldSerialize_Text">
            <summary>
            Design time support to indicate whether the _Text property should be serialized?
            </summary>
            <returns></returns>
        </member>
        <member name="M:PJLControls.ColorPicker.ResetCustomColors">
            <summary>
            Design time support to reset the CustomColors property to it's default value.
            </summary>
        </member>
        <member name="M:PJLControls.ColorPicker.ShouldSerializeCustomColors">
            <summary>
            Design time support to indicate whether the CustomColors property should be serialized.
            </summary>
            <returns></returns>
        </member>
        <member name="P:PJLControls.ColorPicker.BorderStyle">
            <summary>
            Sets/gets the control's BorderStyle.
            </summary>
        </member>
        <member name="E:PJLControls.ColorPicker.ColorChanged">
            <summary>
            The ColorChangedEvent event handler.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.PanelBorderStyle">
            <summary>
            Set/get the drop down panel's border style.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.Color">
            <summary>
            Set/get the pick color.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.ColorSet">
            <summary>
            Set/get the set of colors displayed by the contained 
            <see cref="T:PJLControls.ColorPanel">ColorPanel</see> control.<br></br><br></br>
            See <see cref="T:PJLControls.ColorSet">ColorSet</see>.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.ColorWellSize">
            <summary>
            Set/get the size of the color wells in the drop down palette.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.ColorSortOrder">
            <summary>
            Set/get the order in which colors in the palette or the contained 
            <see cref="T:PJLControls.ColorPanel">ColorPanel</see> should be sorted.<br></br><br></br>
            See <see cref="T:PJLControls.ColorSortOrder">ColorSortOrder</see>.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.DisplayColor">
            <summary>
            Show/hide the selected color in the combo-box part of the control.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.DisplayColorName">
            <summary>
            Show/hide the name of the selected color in the text part of the combo-box.<br></br>
            Otherwise show the value of the Text property.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.AutoSize">
            <summary>
            Set/get the autosize property.
            </summary>
            <remarks>
            Setting AutoSize to <B>true</B>, fixes the controls height to 
            Font.Height + Border.Height + 4.
            </remarks>
        </member>
        <member name="P:PJLControls.ColorPicker._Text">
            <summary>
            The _Text property is the same as the Text property.<br></br><br></br>
            This property has been provided because there seems to be a 
            problem with UserControl.Text in Visual Studio beta 2, 
            whereby values set in the property tab are lost.
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.Columns">
            <summary>
            Set/get the number of preferred columns in the drop-down color panel.<br></br><br></br>
            If you set this value less than or equal to 0 the panel is set to the same width as the combo-box.<br></br>
            </summary>
        </member>
        <member name="P:PJLControls.ColorPicker.CustomColors">
            <summary>
            Set/get the custom color palette to be displayed.
            </summary>
        </member>
        <member name="T:PJLControls.ZAxis">
            <summary>
            This represents the Z Axis of an RGB color cube.
            </summary>
        </member>
        <member name="F:PJLControls.ZAxis.red">
            <summary>The Z Axis is red</summary>
        </member>
        <member name="F:PJLControls.ZAxis.blue">
            <summary>The Z Axis is blue</summary>
        </member>
        <member name="F:PJLControls.ZAxis.green">
            <summary>The Z Axis is green</summary>
        </member>
        <member name="T:PJLControls.ColorSet">
            <summary>Specifies the set of colors to be displayed in the color palette.</summary>
            <remarks><I>If any other useful sets of colors are known please let me know.</I></remarks>
        </member>
        <member name="F:PJLControls.ColorSet.System">
            <summary>Show the system color palette.</summary>
        </member>
        <member name="F:PJLControls.ColorSet.Web">
            <summary>Show the web color palette.</summary>
        </member>
        <member name="F:PJLControls.ColorSet.Custom">
            <summary>Show user defined color palette.</summary>
        </member>
        <member name="T:PJLControls.ColorSortOrder">
            <summary>
            Specifies the order the colors contained in the selected palette should be sorted.
            </summary>
            <remarks><I>If any other useful sort orders are known please let me know.</I></remarks>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Name">
            <summary>Sort by name.</summary>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Brightness">
            <summary>Sort by brightness.</summary>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Hue">
            <summary>Sort by hue.</summary>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Saturation">
            <summary>Sort by saturation.</summary>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Distance">
            <summary>Sort by linear distance from the origin (0,0,0) of the RGB color space.</summary>
        </member>
        <member name="F:PJLControls.ColorSortOrder.Unsorted">
            <summary>
            Colors are sorted according to their original order.<br></br>
            For System and Web color sets this is the same as sort by name.<br></br>
            For custom colors it will be the order of the colors in the array assigned to the CustomColors property
            </summary>
        </member>
        <member name="T:PJLControls.ColorChangedEventArgs">
            <summary>
            Provides data for the <c>ColorChanged</c> event_.
            </summary>
            <remarks>
            The ColorChanged event occurs when a user selects a new color in the
            ColorPicker, ColorPanel or CustomColorPicker controls.
            </remarks>
        </member>
        <member name="M:PJLControls.ColorChangedEventArgs.#ctor(System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <c>ColorChangedEventArgs</c> class_.
            </summary>
            <param name="color">
            The selected color.
            </param>
        </member>
        <member name="P:PJLControls.ColorChangedEventArgs.Color">
            <summary>
            Gets the selected color.
            </summary>
        </member>
        <member name="T:PJLControls.ColorChangedEventHandler">
            <summary>
            The ColorChangedEvent delegate.
            </summary>
        </member>
    </members>
</doc>
